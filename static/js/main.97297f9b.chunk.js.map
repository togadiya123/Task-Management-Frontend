{"version":3,"sources":["components/ErrorMessage.js","pages/signin/SignInPage.js","pages/signup/SignUpPage.js","components/Task.js","components/TasksFilters.js","pages/tasks/TasksPage.js","pages/create-task/CreateTaskPage.js","App.js","serviceWorker.js","services/tasks.service.js","stores/tasks.store.js","stores/user.store.js","services/auth.service.js","index.js","services/base-http.service.js"],"names":["ErrorContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","ErrorHeading","h1","_templateObject2","ErrorList","ul","_templateObject3","ErrorMessage","renderMessageArray","errors","constraints","map","constraint","idx","react_default","a","createElement","key","message","this","props","Array","isArray","Component","Heading","SignInPage_templateObject","FormContainer","SignInPage_templateObject2","FormField","TextField","SignInPage_templateObject3","SignInPage","inject","_this","classCallCheck","_super","call","submit","asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","username","password","errorMessage","wrap","_context","prev","next","setState","state","userStore","signin","window","location","hash","t0","response","data","stop","goToSignUp","errorMesssage","_this2","className","ErrorMessage_ErrorMessage","id","label","margin","variant","onChange","e","target","value","type","Button","style","marginBottom","fullWidth","color","onClick","SignUpPage_templateObject","SignUpPage_templateObject2","SignUpPage_templateObject3","SignUpPage","SignUpPage_regeneratorRuntime","signup","SignUpPage_FormContainer","SignUpPage_Heading","SignUpPage_FormField","CardContainer","Task_templateObject","CardTitle","Task_templateObject2","Task","deleteTask","tasksStore","handleStatusChange","updateTaskStatus","_this$props","title","description","Card","CardContent","CardActions","padding","disableSpacing","Grid","justify","container","item","FormControl","width","Select","status","displayEmpty","MenuItem","IconButton","Delete_default","FiltersContainer","TasksFilters_templateObject","ControlContainer","TasksFilters_templateObject2","TasksFilters","filters$","Subject","syncFilters","search","handleStatusFilterChange","handleSearchTermChange","filters","pipe","debounceTime","subscribe","updateFilters","placeholder","InputProps","startAdornment","InputAdornment","position","Search_default","TasksWrapper","TasksPage_templateObject","TasksHeader","TasksPage_templateObject2","Title","TasksPage_templateObject3","CreateButtonContainer","_templateObject4","TasksContainer","_templateObject5","EmptyTasksPlaceholder","p","_templateObject6","SignOutIconContainer","_templateObject7","TasksPage","observer","handleSignOut","signout","resetTasks","renderTasks","tasks","length","task","components_Task","fetchTasks","Fab","Add_default","ExitToApp_default","components_TasksFilters","FormWrapper","CreateTaskPage_templateObject","CreateTaskPage_templateObject2","CreateTaskPage","handleSubmitTask","CreateTaskPage_regeneratorRuntime","createTask","CreateTaskPage_FormContainer","multiline","rows","marginTop","App","react","react_router","exact","path","component","Boolean","hostname","match","TasksService","_ref","queryObj","queryStr","queryString","stringify","get","concat","tasks_service_regeneratorRuntime","delete","patch","post","BaseHttpService","TasksStore","tasksService","initializerDefineProperty","_descriptor","_descriptor2","result","tasks_store_regeneratorRuntime","sent","_callee2","_context2","push","_callee3","_context3","findIndex","splice","_callee4","_context4","find","observable","action","UserStore","authService","user_store_descriptor","user_store_regeneratorRuntime","abrupt","removeToken","AuthService","accessToken","auth_service_regeneratorRuntime","BASE_URL","saveToken","services","stores","routerStore","RouterStore","browserHistory","createBrowserHistory","history","syncHistoryWithStore","Root","index_module","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","C_Projects_togadiya123_Task_Management_Fronted_task_management_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","process","REACT_APP_BASE_URL","_accessToken","endpoint","options","_args","arguments","undefined","console","log","assign","_getCommonOptions","axios","catch","error","_handleHttpError","_args2","_this3","_args3","_this4","_args4","statusCode","_handle401","token","loadToken","headers","Authorization","localStorage","setItem","getItem","removeItem"],"mappings":"qXAGMA,UAAiBC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,qJASdE,EAAeL,IAAOM,GAAVC,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,iDAKZK,EAAYR,IAAOS,GAAVC,MAAAP,OAAAC,EAAA,EAAAD,CAAA,iCAIMQ,8MACnBC,mBAAqB,SAAAC,GACnB,IAAMC,EAAcD,EAAOE,IAAI,SAACC,EAAYC,GAAb,OAAqBC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,GAAMD,KAEnE,OAAOE,EAAAC,EAAAC,cAACZ,EAAD,KAAYM,gDAGrB,WACE,IAAQQ,EAAYC,KAAKC,MAAjBF,QAER,OACEJ,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACf,EAAD,cACCoB,MAAMC,QAAQJ,GAAWC,KAAKX,mBAAmBU,GAAWJ,EAAAC,EAAAC,cAAA,SAAIE,WAb/BK,8xMCb1C,YAAMC,EAAU5B,IAAOM,GAAVuB,MAAA1B,OAAAC,EAAA,EAAAD,CAAA,4BAIP2B,EAAgB9B,IAAOC,IAAV8B,MAAA5B,OAAAC,EAAA,EAAAD,CAAA,sHAQb6B,EAAYhC,YAAOiC,IAAPjC,CAAHkC,MAAA/B,OAAAC,EAAA,EAAAD,CAAA,0BAoFAgC,EAhFdC,YAAO,YAAa,mEAEnB,SAAAD,EAAYX,GAAO,IAAAa,EAAA,OAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAAY,IACjBE,EAAAE,EAAAC,KAAAjB,KAAMC,IAQRiB,OATmBtC,OAAAuC,EAAA,EAAAvC,CAAAwC,IAAAC,KASV,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPhB,EAAKiB,SAAS,CAAEL,aAAc,OADvBH,EAEwBT,EAAKkB,MAA5BR,EAFDD,EAECC,SAAUC,EAFXF,EAEWE,SAFXG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKChB,EAAKb,MAAMgC,UAAUC,OAAOV,EAAUC,GALvC,OAMLU,OAAOC,SAASC,KAAO,SANlBT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAQCF,EAAeE,EAAAU,GAAMC,SAASC,KAAKzC,QACzCe,EAAKiB,SAAS,CAAEL,iBATX,yBAAAE,EAAAa,SAAAnB,EAAA,iBATUR,EAsBnB4B,WAAa,WACXP,OAAOC,SAASC,KAAO,WArBvBvB,EAAKkB,MAAQ,CACXR,SAAU,GACVC,SAAU,GACVkB,cAAe,MALA7B,4CA0BnB,WAAS,IAAA8B,EAAA5C,KACC0B,EAAiB1B,KAAKgC,MAAtBN,aAER,OACE/B,EAAAC,EAAAC,cAAA,OAAKgD,UAAU,sBACblD,EAAAC,EAAAC,cAACU,EAAD,KACEZ,EAAAC,EAAAC,cAACQ,EAAD,eACAV,EAAAC,EAAAC,cAAA,2DAEC6B,GAAgB/B,EAAAC,EAAAC,cAACiD,EAAD,CAAc/C,QAASC,KAAKgC,MAAMN,eAEnD/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAD,CACEsC,GAAG,gBACHC,MAAM,WACNC,OAAO,QACPC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEP,SAAU4B,EAAEC,OAAOC,YAGtD3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAD,CACEsC,GAAG,gBACHC,MAAM,WACNC,OAAO,QACPC,QAAQ,WACRK,KAAK,WACLJ,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEN,SAAU2B,EAAEC,OAAOC,YAGtD3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,QACvBC,WAAS,EACTT,QAAQ,YACRU,MAAM,UACNC,QAAS7D,KAAKkB,QALhB,WAUAvB,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQG,WAAS,EAACE,QAAS7D,KAAK0C,YAAhC,iDArEatC,yyMCjBzB,2CAAMC,GAAU5B,IAAOM,GAAV+E,MAAAlF,OAAAC,EAAA,EAAAD,CAAA,4BAIP2B,GAAgB9B,IAAOC,IAAVqF,MAAAnF,OAAAC,EAAA,EAAAD,CAAA,sHAQb6B,GAAYhC,YAAOiC,IAAPjC,CAAHuF,MAAApF,OAAAC,EAAA,EAAAD,CAAA,0BA6EAqF,GAzEdpD,YAAO,YAAa,mEAEnB,SAAAoD,EAAYhE,GAAO,IAAAa,EAAA,OAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAAiE,IACjBnD,EAAAE,EAAAC,KAAAjB,KAAMC,IAQRiB,OATmBtC,OAAAuC,EAAA,EAAAvC,CAAAsF,IAAA7C,KASV,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAwC,IAAAvC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAP,EACwBT,EAAKkB,MAA5BR,EADDD,EACCC,SAAUC,EADXF,EACWE,SADXG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIChB,EAAKb,MAAMgC,UAAUkC,OAAO3C,EAAUC,GAJvC,OAKLU,OAAOC,SAASC,KAAO,UALlBT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAOCF,EAAeE,EAAAU,GAAMC,SAASC,KAAKzC,QACzCe,EAAKiB,SAAS,CAAEL,iBARX,yBAAAE,EAAAa,SAAAnB,EAAA,iBAPPR,EAAKkB,MAAQ,CACXR,SAAU,GACVC,SAAU,GACVC,aAAc,MALCZ,4CAqBnB,WAAS,IAAA8B,EAAA5C,KACC0B,EAAiB1B,KAAKgC,MAAtBN,aAER,OACE/B,EAAAC,EAAAC,cAAA,OAAKgD,UAAU,sBACblD,EAAAC,EAAAC,cAACuE,GAAD,KACEzE,EAAAC,EAAAC,cAACwE,GAAD,iBACA1E,EAAAC,EAAAC,cAAA,yCAEC6B,GAAgB/B,EAAAC,EAAAC,cAACiD,EAAD,CAAc/C,QAASC,KAAKgC,MAAMN,eAEnD/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,GAAD,CACEvB,GAAG,gBACHC,MAAM,WACNC,OAAO,QACPC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEP,SAAU4B,EAAEC,OAAOC,YAGtD3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,GAAD,CACEvB,GAAG,gBACHC,MAAM,WACNC,OAAO,QACPC,QAAQ,WACRK,KAAK,WACLJ,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEN,SAAU2B,EAAEC,OAAOC,YAGtD3D,EAAAC,EAAAC,cAAA,2HAGAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEG,WAAS,EACTT,QAAQ,YACRU,MAAM,UACNC,QAAS7D,KAAKkB,QAJhB,qBAzDad,0KCVnBmE,GAAgB9F,IAAOC,IAAV8F,MAAA5F,OAAAC,EAAA,EAAAD,CAAA,kCAIb6F,GAAYhG,IAAOM,GAAV2F,MAAA9F,OAAAC,EAAA,EAAAD,CAAA,gDAyDA+F,GApDd9D,YAAO,4NAEN+D,WAAa,WACX9D,EAAKb,MAAM4E,WAAWD,WAAW9D,EAAKb,MAAM8C,OAG9C+B,mBAAqB,SAAA1B,GACnBtC,EAAKb,MAAM4E,WAAWE,iBAAiBjE,EAAKb,MAAM8C,GAAIK,EAAEC,OAAOC,oDAGjE,WACE,IAAA0B,EAA+BhF,KAAKC,MAA5BgF,EAARD,EAAQC,MAAOC,EAAfF,EAAeE,YAEf,OACEvF,EAAAC,EAAAC,cAAC0E,GAAD,KACE5E,EAAAC,EAAAC,cAACsF,GAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,GAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAC4E,GAAD,KAAYQ,GACXC,GAEHvF,EAAAC,EAAAC,cAACwF,GAAA,EAAD,CAAa5B,MAAO,CAAE6B,QAAS,QAAUC,gBAAc,GACrD5F,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CACEC,QAAQ,gBACRC,WAAS,GAET/F,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CAAMG,MAAI,GACRhG,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CAAanC,MAAO,CAAEoC,MAAO,UAC3BlG,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACExC,MAAOtD,KAAKC,MAAM8F,OAClB5C,SAAUnD,KAAK8E,mBACfkB,cAAY,GAEZrG,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,QAAjB,QACA3D,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,eAAjB,eACA3D,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,QAAjB,WAKN3D,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CAAMG,MAAI,GACRhG,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAYrC,QAAS7D,KAAK4E,YACxBjF,EAAAC,EAAAC,cAACsG,GAAAvG,EAAD,CAAYgE,MAAM,uBAxCjBxD,oECjBbgG,GAAmB3H,IAAOC,IAAV2H,MAAAzH,OAAAC,EAAA,EAAAD,CAAA,+BAIhB0H,GAAmB7H,IAAOC,IAAV6H,MAAA3H,OAAAC,EAAA,EAAAD,CAAA,iFA0FP4H,GApFd3F,YAAO,kEAIN,SAAA2F,EAAYvG,GAAO,IAAAa,EAAA,OAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAAwG,IACjB1F,EAAAE,EAAAC,KAAAjB,KAAMC,IAHRwG,SAAW,IAAIC,KAEI5F,EAiBnB6F,YAAc,WACZ,IAAApF,EAA2BT,EAAKkB,MAAxB+D,EAARxE,EAAQwE,OAAQa,EAAhBrF,EAAgBqF,OAChB9F,EAAK2F,SAAS3E,KAAK,CAAEiE,SAAQa,YAnBZ9F,EAsBnB+F,yBAA2B,SAAAzD,GACzB,IAAM2C,EAAS3C,EAAEC,OAAOC,MACxBxC,EAAKiB,SAAS,CAAEgE,UAAUjF,EAAK6F,cAxBd7F,EA2BnBgG,uBAAyB,SAAA1D,GACvB,IAAMwD,EAASxD,EAAEC,OAAOC,MACxBxC,EAAKiB,SAAS,CAAE6E,UAAU9F,EAAK6F,cA1B/B7F,EAAKkB,MAAQ,CACX+D,OAAQ9F,EAAM4E,WAAWkC,QAAQhB,OACjCa,OAAQ3G,EAAM4E,WAAWkC,QAAQH,QAGnC9F,EAAK2F,SACFO,KACCC,aAAa,MAEdC,UAAU,SAAAH,GACT9G,EAAM4E,WAAWsC,cAAcJ,KAblBjG,4CAgCnB,WACE,OACEnB,EAAAC,EAAAC,cAACuG,GAAD,KACEzG,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CACEC,QAAQ,gBACRC,WAAS,GAET/F,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CAAMG,MAAI,GACRhG,EAAAC,EAAAC,cAACyG,GAAD,KACE3G,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CAAanC,MAAO,CAAEoC,MAAO,UAC3BlG,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACE0G,YAAY,YACZ9D,MAAOtD,KAAKgC,MAAM4E,OAClBzD,SAAUnD,KAAK8G,uBACfO,WAAY,CACVC,eACE3H,EAAAC,EAAAC,cAAC0H,GAAA,EAAD,CAAgBC,SAAS,SACvB7H,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,aASdD,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CAAMG,MAAI,GACRhG,EAAAC,EAAAC,cAACyG,GAAD,KACE3G,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CAAanC,MAAO,CAAEoC,MAAO,UAC3BlG,EAAAC,EAAAC,cAACiG,GAAA,EAAD,CACExC,MAAOtD,KAAKgC,MAAM+D,OAClB5C,SAAUnD,KAAK6G,yBACfb,cAAY,GAEZrG,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAM,IAAhB,oBACA3D,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,QAAjB,QACA3D,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,eAAjB,eACA3D,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAU3C,MAAO,QAAjB,qBAxESlD,iBCVrBsH,GAAejJ,IAAOC,IAAViJ,MAAA/I,OAAAC,EAAA,EAAAD,CAAA,6GAQZgJ,GAAcnJ,IAAOC,IAAVmJ,MAAAjJ,OAAAC,EAAA,EAAAD,CAAA,6FAMXkJ,GAAQrJ,IAAOM,GAAVgJ,MAAAnJ,OAAAC,EAAA,EAAAD,CAAA,6CAKLoJ,GAAwBvJ,IAAOC,IAAVuJ,MAAArJ,OAAAC,EAAA,EAAAD,CAAA,kGAOrBsJ,GAAiBzJ,IAAOC,IAAVyJ,MAAAvJ,OAAAC,EAAA,EAAAD,CAAA,gCAIdwJ,GAAwB3J,IAAO4J,EAAVC,MAAA1J,OAAAC,EAAA,EAAAD,CAAA,wEAMrB2J,GAAuB9J,IAAOC,IAAV8J,QAAA5J,OAAAC,EAAA,EAAAD,CAAA,+EAyEX6J,GAjEd5H,YAAO,aAAc,cAAe,gBACpC6H,2NAMCC,cAAgB,WACd,IAAA3D,EAAkClE,EAAKb,MAA/BgC,EAAR+C,EAAQ/C,UAAW4C,EAAnBG,EAAmBH,WACnB5C,EAAU2G,UACV/D,EAAWgE,aACX1G,OAAOC,SAASC,KAAO,aAGzByG,YAAc,WACZ,IAAQjE,EAAe/D,EAAKb,MAApB4E,WAER,OAAKA,EAAWkE,MAAMC,OAIfnE,EAAWkE,MAAMvJ,IAAI,SAAAyJ,GAAI,OAC9BtJ,EAAAC,EAAAC,cAACqJ,GAAD,CACEpJ,IAAKmJ,EAAKlG,GACVA,GAAIkG,EAAKlG,GACTkC,MAAOgE,EAAKhE,MACZC,YAAa+D,EAAK/D,YAClBa,OAAQkD,EAAKlD,WATRpG,EAAAC,EAAAC,cAACuI,GAAD,gGAfX,WACEpI,KAAKC,MAAM4E,WAAWsE,mCA4BxB,WACE,OACExJ,EAAAC,EAAAC,cAAC6H,GAAD,KACE/H,EAAAC,EAAAC,cAAC+H,GAAD,KACEjI,EAAAC,EAAAC,cAACiI,GAAD,yBAEAnI,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,CACElG,QAAQ,WACRW,QAAS,WAAQ1B,OAAOC,SAASC,KAAO,kBAExC1C,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,MAJF,eAQAD,EAAAC,EAAAC,cAAC0I,GAAD,KACE5I,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAYrC,QAAS7D,KAAK2I,eACxBhJ,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAaiD,UAAU,oBAM/BlD,EAAAC,EAAAC,cAAC0J,GAAD,MAEA5J,EAAAC,EAAAC,cAACqI,GAAD,KACGlI,KAAK8I,uBAxDQ1I,0yMCjDxB,OAAMoJ,GAAc/K,IAAOC,IAAV+K,QAAA7K,OAAAC,EAAA,EAAAD,CAAA,mHAQX2B,GAAgB9B,IAAOC,IAAVgL,QAAA9K,OAAAC,EAAA,EAAAD,CAAA,sHA8EJ+K,GAtEd9I,YAAO,aAAc,oEAEpB,SAAA8I,EAAY1J,GAAO,IAAAa,EAAA,OAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAA2J,IACjB7I,EAAAE,EAAAC,KAAAjB,KAAMC,IASR2J,iBAVmBhL,OAAAuC,EAAA,EAAAvC,CAAAiL,KAAAxI,KAUA,SAAAC,IAAA,IAAAuD,EAAAtD,EAAA0D,EAAAC,EAAAxD,EAAA,OAAAmI,KAAAlI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT+C,EAAe/D,EAAKb,MAApB4E,WADStD,EAEcT,EAAKkB,MAA5BiD,EAFS1D,EAET0D,MAAOC,EAFE3D,EAEF2D,YAFEtD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKT+C,EAAWiF,WAAW7E,EAAOC,GALpB,OAMf/C,OAAOC,SAASC,KAAO,SANRT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAQTF,EAAeE,EAAAU,GAAMC,SAASC,KAAKzC,QACzCe,EAAKiB,SAAS,CAAEL,iBATD,yBAAAE,EAAAa,SAAAnB,EAAA,iBAPjBR,EAAKkB,MAAQ,CACXiD,MAAO,GACPC,YAAa,GACbxD,aAAc,MANCZ,4CAuBnB,WAAS,IAAA8B,EAAA5C,KACP,OACEL,EAAAC,EAAAC,cAAC2J,GAAD,KACE7J,EAAAC,EAAAC,cAACkK,GAAD,KACEpK,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,qEAEEG,KAAKgC,MAAMN,cAAgB/B,EAAAC,EAAAC,cAACiD,EAAD,CAAc/C,QAASC,KAAKgC,MAAMN,eAE/D/B,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CAAajC,WAAS,GACpBhE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEsC,MAAM,QACNoE,YAAY,QACZnE,OAAO,SACPC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEkD,MAAO7B,EAAEC,OAAOC,YAGnD3D,EAAAC,EAAAC,cAAC+F,GAAA,EAAD,CAAajC,WAAS,GACpBhE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEsC,MAAM,cACNoE,YAAY,cACZ4C,WAAS,EACTC,KAAK,IACLhH,OAAO,SACPC,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIR,EAAKb,SAAS,CAAEmD,YAAa9B,EAAEC,OAAOC,YAIzD3D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,MAAO,CAAEyG,UAAW,QACpBvG,WAAS,EACTT,QAAQ,YACRU,MAAM,UACNC,QAAS7D,KAAK4J,kBALhB,wBAtDmBxJ,kBCEd+J,GAhBdtJ,YAAO,kBACP6H,2KAEC,WACE,OACE/I,EAAAC,EAAAC,cAACuK,EAAA,SAAD,KACEzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5J,IACjCjB,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAW5J,IAClCjB,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWvG,KAClCtE,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW/B,KACtC9I,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWb,aARnCvJ,uBCCEqK,QACW,cAA7BtI,OAAOC,SAASsI,UAEe,UAA7BvI,OAAOC,SAASsI,UAEhBvI,OAAOC,SAASsI,SAASC,MACvB,63MCfeC,mKACnB,SAAAC,GAA8B,IAAjB9E,EAAiB8E,EAAjB9E,OAAQa,EAASiE,EAATjE,OACbkE,EAAW,GAEb/E,EAAOiD,SACT8B,EAAS/E,OAASA,GAGhBa,EAAOoC,SACT8B,EAASlE,OAASA,GAGpB,IAAMmE,EAAWC,KAAYC,UAAUH,GACvC,OAAO9K,KAAKkL,IAAI,SAAWH,EAAQ,IAAAI,OAAOJ,GAAa,sEAGzD,SAAAzJ,EAAiByB,GAAjB,OAAAqI,KAAAzJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQ9B,KAAKqL,OAAL,SAAAF,OAAqBpI,IAD7B,wBAAAnB,EAAAa,SAAAnB,EAAAtB,8FAIA,SAAiB+C,EAAIgD,GACnB,OAAO/F,KAAKsL,MAAL,SAAAH,OAAoBpI,EAApB,WAAiC,CAAEgD,qCAG5C,SAAWd,EAAOC,GAChB,OAAOlF,KAAKuL,KAAL,QAAmB,CAAEtG,QAAOC,uBAzBGsG,s0MCDrBC,kBAInB,SAAAA,EAAYC,GAAe9M,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAAyL,GAAA7M,OAAA+M,GAAA,EAAA/M,CAAAoB,KAAA,QAAA4L,GAAA5L,MAAApB,OAAA+M,GAAA,EAAA/M,CAAAoB,KAAA,UAAA6L,GAAA7L,MACzBA,KAAK0L,aAAeA,mDAGtB,SAAAb,GAAkC,IAAlB9E,EAAkB8E,EAAlB9E,OAAQa,EAAUiE,EAAVjE,OACtB5G,KAAK+G,QAAQhB,OAASA,EACtB/F,KAAK+G,QAAQH,OAASA,EACtB5G,KAAKmJ,uCAGP,WAEEnJ,KAAK+I,MAAQ,oEAGf,SAAAzH,IAAA,IAAAwK,EAAA,OAAAC,KAAApK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEuB9B,KAAK0L,aAAavC,WAAWnJ,KAAK+G,SAFzD,QAEQ+E,EAFRlK,EAAAoK,QAKIhM,KAAK+I,MAAQ+C,EAAOtJ,MALxB,wBAAAZ,EAAAa,SAAAnB,EAAAtB,8HASA,SAAAiM,EACiBhH,EAAOC,GADxB,IAAA4G,EAAA,OAAAC,KAAApK,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cAAAoK,EAAApK,KAAA,EAEuB9B,KAAK0L,aAAa5B,WAAW7E,EAAOC,GAF3D,QAEQ4G,EAFRI,EAAAF,OAKIhM,KAAK+I,MAAMoD,KAAKL,EAAOtJ,MAL3B,wBAAA0J,EAAAzJ,SAAAwJ,EAAAjM,iIASA,SAAAoM,EACiBrJ,GADjB,IAAArD,EAAA,OAAAqM,KAAApK,KAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,cAEQpC,EAAMM,KAAK+I,MAAMuD,UAAU,SAAArD,GAAI,OAAIA,EAAKlG,KAAOA,IAFvDsJ,EAAAvK,KAAA,EAGQ9B,KAAK0L,aAAa9G,WAAW7B,GAHrC,OAIE/C,KAAK+I,MAAMwD,OAAO7M,EAAK,GAJzB,wBAAA2M,EAAA5J,SAAA2J,EAAApM,qIAOA,SAAAwM,EACuBzJ,EAAIgD,GAD3B,IAAAkD,EAAA,OAAA8C,KAAApK,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,cAEQmH,EAAOjJ,KAAK+I,MAAM2D,KAAK,SAAAzD,GAAI,OAAIA,EAAKlG,KAAOA,IAFnD0J,EAAA3K,KAAA,EAGQ9B,KAAK0L,aAAa3G,iBAAiBhC,EAAIgD,GAH/C,OAIEkD,EAAKlD,OAASA,EAJhB,wBAAA0G,EAAAhK,SAAA+J,EAAAxM,+GA3CC2M,uFAAmB,8CACnBA,uFAAqB,CAAE5G,OAAQ,GAAIa,OAAQ,+CAY3CgG,4HAKAA,4HASAA,4HASAA,kIAOAA,q3MC5CkBC,kBAGnB,SAAAA,EAAYC,GAAclO,OAAAmC,EAAA,EAAAnC,CAAAoB,KAAA6M,GAAAjO,OAAA+M,GAAA,EAAA/M,CAAAoB,KAAA,WAAA+M,GAAA/M,MACxBA,KAAK8M,YAAcA,mFAGrB,SAAAxL,EACaE,EAAUC,GADvB,OAAAuL,KAAArL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEwB9B,KAAK8M,YAAY5K,OAAOV,EAAUC,GAF1D,OAEEzB,KAAKwB,SAFPI,EAAAoK,KAAA,wBAAApK,EAAAa,SAAAnB,EAAAtB,6HAKA,SAAAiM,EACazK,EAAUC,GADvB,OAAAuL,KAAArL,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cAAAoK,EAAAe,OAAA,SAESjN,KAAK8M,YAAY3I,OAAO3C,EAAUC,IAF3C,wBAAAyK,EAAAzJ,SAAAwJ,EAAAjM,uFAKA,WAEEA,KAAKwB,SAAW,KAChBxB,KAAK8M,YAAYI,gEAnBlBP,wFAAsB,4CAMtBC,oHAKAA,qHAKAA,q3MChBkBO,sMACnB,SAAA7L,EAAaE,EAAUC,GAAvB,IAAAqK,EAAAsB,EAAA,OAAAC,KAAA1L,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuByJ,gBAAI,GAAAJ,OAAInL,KAAKsN,SAAT,gBAAiC,CAAE9L,WAAUC,aADxE,cACQqK,EADRlK,EAAAoK,KAEQoB,EAActB,EAAOtJ,KAAK4K,YAChCpN,KAAKuN,UAAUH,GAHjBxL,EAAAqL,OAAA,SAISnB,EAAOtJ,KAAKhB,UAJrB,wBAAAI,EAAAa,SAAAnB,EAAAtB,6HAOA,SAAAiM,EAAazK,EAAUC,GAAvB,OAAA4L,KAAA1L,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cAAAoK,EAAApK,KAAA,EACQyJ,gBAAI,GAAAJ,OAAInL,KAAKsN,SAAT,gBAAiC,CAAE9L,WAAUC,aADzD,wBAAAyK,EAAAzJ,SAAAwJ,EAAAjM,8HAIA,SAAAoM,IAAA,OAAAiB,KAAA1L,KAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,OACE9B,KAAKkN,cADP,wBAAAb,EAAA5J,SAAA2J,EAAApM,oEAZuCwL,MCanCgC,GAAW,GACXC,GAAS,GAEfA,GAAOC,YAAc,IAAIC,cACzB,IAAMC,GAAiBC,cACjBC,GAAUC,+BAAqBH,GAAgBH,GAAOC,aAE5DF,GAAS9B,aAAe,IAAId,GAAa6C,GAAOC,aAChDF,GAASV,YAAc,IAAIK,GAE3BM,GAAO5I,WAAa,IAAI4G,GAAW+B,GAAS9B,cAC5C+B,GAAOxL,UAAY,IAAI4K,GAAUW,GAASV,aAE1C,IAAMkB,GACJrO,EAAAC,EAAAC,cAACoO,EAAA,EAAaR,GACZ9N,EAAAC,EAAAC,cAACqO,EAAA,EAAD,CAAYJ,QAASA,IACnBnO,EAAAC,EAAAC,cAACsO,GAAD,QAINC,IAASC,OAAOL,GAAMM,SAASC,eAAe,SL6FxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,+5MMjIErD,aAInB,SAAAA,EAAYkC,GAAc9O,OAAAkQ,EAAA,EAAAlQ,CAAAoB,KAAAwL,GAAAxL,KAH1BsN,SAAWyB,uEAAYC,oBAAsB,wBAGpBhP,KAFzBiP,aAAe,KAGbjP,KAAK0N,YAAcA,+EAGrB,SAAApM,EAAU4N,GAAV,IAAAC,EAAArO,EAAAd,KAAAoP,EAAAC,UAAA,OAAAjO,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAoBqN,EAApBC,EAAApG,OAAA,QAAAsG,IAAAF,EAAA,GAAAA,EAAA,GAA8B,GAC5BG,QAAQC,IAAI,CAACT,YACbnQ,OAAO6Q,OAAON,EAASnP,KAAK0P,qBAF9B9N,EAAAqL,OAAA,SAGS0C,IAAMzE,IAAN,GAAAC,OAAanL,KAAKsN,SAAlB,KAAAnC,OAA8B+D,GAAYC,GAC9CS,MAAM,SAAAC,GAAK,OAAI/O,EAAKgP,iBAAiBD,MAJ1C,wBAAAjO,EAAAa,SAAAnB,EAAAtB,wHAOA,SAAAiM,EAAWiD,GAAX,IAAA1M,EAAA2M,EAAAvM,EAAA5C,KAAA+P,EAAAV,UAAA,OAAAjO,IAAAO,KAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cAAqBU,EAArBuN,EAAA/G,OAAA,QAAAsG,IAAAS,EAAA,GAAAA,EAAA,GAA4B,GAAIZ,EAAhCY,EAAA/G,OAAA,QAAAsG,IAAAS,EAAA,GAAAA,EAAA,GAA0C,GACxCR,QAAQC,IAAI,CAACT,YACbnQ,OAAO6Q,OAAON,EAASnP,KAAK0P,qBAF9BxD,EAAAe,OAAA,SAGS0C,IAAMpE,KAAN,GAAAJ,OAAcnL,KAAKsN,SAAnB,KAAAnC,OAA+B+D,GAAY1M,EAAM2M,GACrDS,MAAM,SAAAC,GAAK,OAAIjN,EAAKkN,iBAAiBD,MAJ1C,wBAAA3D,EAAAzJ,SAAAwJ,EAAAjM,0HAOA,SAAAoM,EAAa8C,GAAb,IAAAC,EAAAa,EAAAhQ,KAAAiQ,EAAAZ,UAAA,OAAAjO,IAAAO,KAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,cAAuBqN,EAAvBc,EAAAjH,OAAA,QAAAsG,IAAAW,EAAA,GAAAA,EAAA,GAAiC,GAC/BV,QAAQC,IAAI,CAACT,YACbnQ,OAAO6Q,OAAON,EAASnP,KAAK0P,qBAF9BrD,EAAAY,OAAA,SAGS0C,IAAMtE,OAAN,GAAAF,OAAgBnL,KAAKsN,SAArB,KAAAnC,OAAiC+D,GAAYC,GACjDS,MAAM,SAAAC,GAAK,OAAIG,EAAKF,iBAAiBD,MAJ1C,wBAAAxD,EAAA5J,SAAA2J,EAAApM,yHAOA,SAAAwM,EAAY0C,GAAZ,IAAA1M,EAAA2M,EAAAe,EAAAlQ,KAAAmQ,EAAAd,UAAA,OAAAjO,IAAAO,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,cAAsBU,EAAtB2N,EAAAnH,OAAA,QAAAsG,IAAAa,EAAA,GAAAA,EAAA,GAA6B,GAAIhB,EAAjCgB,EAAAnH,OAAA,QAAAsG,IAAAa,EAAA,GAAAA,EAAA,GAA2C,GACzCZ,QAAQC,IAAI,CAACT,YACbnQ,OAAO6Q,OAAON,EAASnP,KAAK0P,qBAF9BjD,EAAAQ,OAAA,SAGS0C,IAAMrE,MAAN,GAAAH,OAAenL,KAAKsN,SAApB,KAAAnC,OAAgC+D,GAAY1M,EAAM2M,GACtDS,MAAM,SAAAC,GAAK,OAAIK,EAAKJ,iBAAiBD,MAJ1C,wBAAApD,EAAAhK,SAAA+J,EAAAxM,8FAOA,SAAiB6P,GAGf,GAAmB,MAFIA,EAAMtN,SAASC,KAA9B4N,WAGN,MAAMP,EAEN,OAAO7P,KAAKqQ,uCAIhB,WACElO,OAAOC,SAASC,KAAO,2CAGzB,WACE,IAAMiO,EAAQtQ,KAAKuQ,YAEnB,MAAO,CACLC,QAAS,CACPC,cAAa,UAAAtF,OAAYmF,8BAK/B,WACE,OAAOtQ,KAAKiP,aAAejP,KAAKiP,aAAejP,KAAKuQ,qCAGtD,SAAUnD,GAER,OADApN,KAAKiP,aAAe7B,EACbsD,aAAaC,QAAQ,cAAevD,4BAG7C,WACE,IAAMkD,EAAQI,aAAaE,QAAQ,eAEnC,OADA5Q,KAAKiP,aAAeqB,EACbA,6BAGT,WACEI,aAAaG,WAAW","file":"static/js/main.97297f9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorContainer = styled.div`\r\n  width: 100%;\r\n  padding: 8px 16px;\r\n  background-color: #f7c5c0;\r\n  color: #a51809;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ErrorHeading = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ErrorList = styled.ul`\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport default class ErrorMessage extends Component {\r\n  renderMessageArray = errors => {\r\n    const constraints = errors.map((constraint, idx) => <li key={idx}>{constraint}</li>);\r\n \r\n    return <ErrorList>{constraints}</ErrorList>;\r\n  };\r\n \r\n  render() {\r\n    const { message } = this.props;\r\n \r\n    return (\r\n      <ErrorContainer>\r\n        <ErrorHeading>Oops!</ErrorHeading>\r\n        {Array.isArray(message) ? this.renderMessageArray(message) : <p>{message}</p>}\r\n      </ErrorContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport './SignInPage.scss';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignInPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMesssage: null,\r\n    };\r\n  }\r\n\r\n  submit = async () => {\r\n    this.setState({ errorMessage: null });\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      await this.props.userStore.signin(username, password);\r\n      window.location.hash = '/tasks';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  goToSignUp = () => {\r\n    window.location.hash = '/signup';\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Hello!</Heading>\r\n          <p>Fill in your username and password to sign in.</p>\r\n          \r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n            <Button\r\n              style={{ marginBottom: '10px' }}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n\r\n            <Button fullWidth onClick={this.goToSignUp}>\r\n              Don't have an account? Sign up now!\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInPage;\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport './SignUpPage.scss';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignUpPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  submit = async () => {\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      await this.props.userStore.signup(username, password);\r\n      window.location.hash = '/signin';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Join us!</Heading>\r\n          <p>Start managing tasks easily.</p>\r\n\r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <p>\r\n            Passwords must contain at least 1 upper case letter, 1 lower case letter and one number OR special charracter.\r\n          </p>\r\n          <hr/>\r\n          <div>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN UP\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CardTitle = styled.h1`\r\n  margin: 8px 0;\r\n  font-size: 22px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass Task extends Component {\r\n  deleteTask = () => {\r\n    this.props.tasksStore.deleteTask(this.props.id);\r\n  };\r\n\r\n  handleStatusChange = e => {\r\n    this.props.tasksStore.updateTaskStatus(this.props.id, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { title, description } = this.props;\r\n\r\n    return (\r\n      <CardContainer>\r\n        <Card>\r\n          <CardContent>\r\n            <CardTitle>{title}</CardTitle>\r\n            {description}\r\n          </CardContent>\r\n          <CardActions style={{ padding: '14px' }} disableSpacing>\r\n            <Grid\r\n              justify=\"space-between\" // Add it here :)\r\n              container \r\n            >\r\n              <Grid item>\r\n                <FormControl style={{ width: '140px' }}>\r\n                  <Select\r\n                    value={this.props.status}\r\n                    onChange={this.handleStatusChange}\r\n                    displayEmpty\r\n                  >\r\n                    <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                    <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                    <MenuItem value={'DONE'}>Done</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <IconButton onClick={this.deleteTask}>\r\n                  <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n        </Card>\r\n      </CardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport { Grid, FormControl, Select, MenuItem, TextField, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nconst FiltersContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ControlContainer = styled.div`\r\n  background-color: #c0cde0;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass TasksFilters extends Component {\r\n  filters$ = new Subject();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: props.tasksStore.filters.status,\r\n      search: props.tasksStore.filters.search,\r\n    };\r\n\r\n    this.filters$\r\n      .pipe(\r\n        debounceTime(500),\r\n      )\r\n      .subscribe(filters => {\r\n        props.tasksStore.updateFilters(filters);\r\n      });\r\n  }\r\n\r\n  syncFilters = () => {\r\n    const { status, search } = this.state;\r\n    this.filters$.next({ status, search });\r\n  }\r\n\r\n  handleStatusFilterChange = e => {\r\n    const status = e.target.value;\r\n    this.setState({ status }, this.syncFilters);\r\n  };\r\n\r\n  handleSearchTermChange = e => {\r\n    const search = e.target.value;\r\n    this.setState({ search }, this.syncFilters);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FiltersContainer>\r\n        <Grid\r\n          justify=\"space-between\" // Add it here :)\r\n          container\r\n        >\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <TextField\r\n                  placeholder=\"Search...\"\r\n                  value={this.state.search}\r\n                  onChange={this.handleSearchTermChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <Select\r\n                  value={this.state.status}\r\n                  onChange={this.handleStatusFilterChange}\r\n                  displayEmpty\r\n                >\r\n                  <MenuItem value=\"\">No status filter</MenuItem>\r\n                  <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                  <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                  <MenuItem value={'DONE'}>Done</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </FiltersContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksFilters;\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SignOutIcon from '@material-ui/icons/ExitToApp'\r\nimport styled from 'styled-components';\r\nimport Task from '../../components/Task';\r\nimport TasksFilters from '../../components/TasksFilters';\r\n\r\nconst TasksWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 860px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TasksHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 3px solid #757c87;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  color: #edf4ff;\r\n`;\r\n\r\nconst CreateButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst TasksContainer = styled.div`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst EmptyTasksPlaceholder = styled.p`\r\n  color: #edf4ff;\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst SignOutIconContainer = styled.div`\r\n  margin-left: 10px;\r\n  \r\n  .signOutIcon {\r\n    fill: #edf4ff;\r\n  }\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore', 'userStore')\r\n@observer\r\nclass TasksPage extends Component {\r\n  componentDidMount() {\r\n    this.props.tasksStore.fetchTasks();\r\n  }\r\n  \r\n  handleSignOut = () => {\r\n    const { userStore, tasksStore } = this.props;\r\n    userStore.signout();\r\n    tasksStore.resetTasks();\r\n    window.location.hash = '/signin';\r\n  };\r\n\r\n  renderTasks = () => {\r\n    const { tasksStore } = this.props;\r\n\r\n    if (!tasksStore.tasks.length) {\r\n      return <EmptyTasksPlaceholder>No tasks available. Create one?</EmptyTasksPlaceholder>\r\n    }\r\n\r\n    return tasksStore.tasks.map(task => (\r\n      <Task\r\n        key={task.id}\r\n        id={task.id}\r\n        title={task.title}\r\n        description={task.description}\r\n        status={task.status}\r\n      />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TasksWrapper>\r\n        <TasksHeader>\r\n          <Title>Get things done.</Title>\r\n\r\n          <CreateButtonContainer>\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={() => { window.location.hash = '/tasks/create'; }}\r\n            >\r\n              <AddIcon />\r\n              Create Task\r\n            </Fab>\r\n\r\n            <SignOutIconContainer>\r\n              <IconButton onClick={this.handleSignOut}>\r\n                <SignOutIcon className=\"signOutIcon\" />\r\n              </IconButton>\r\n            </SignOutIconContainer>\r\n          </CreateButtonContainer>\r\n        </TasksHeader>\r\n\r\n        <TasksFilters />\r\n\r\n        <TasksContainer>\r\n          {this.renderTasks()}\r\n        </TasksContainer>\r\n      </TasksWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksPage;\r\n","import React, { Component } from 'react';\r\nimport { TextField, FormControl, Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst FormWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore')\r\nclass CreateTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  handleSubmitTask = async () => {\r\n    const { tasksStore } = this.props;\r\n    const { title, description } = this.state;\r\n\r\n    try {\r\n      await tasksStore.createTask(title, description);\r\n      window.location.hash = '/tasks';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormWrapper>\r\n        <FormContainer>\r\n          <h1>Create a new task</h1>\r\n          <p>Provide information about the task you wish to complete.</p>\r\n\r\n          { this.state.errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Title\"\r\n              placeholder=\"Title\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ title: e.target.value })}\r\n            />\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Description\"\r\n              placeholder=\"Description\"\r\n              multiline\r\n              rows=\"8\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ description: e.target.value })}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{ marginTop: '10px' }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.handleSubmitTask}\r\n          >\r\n            CREATE TASK\r\n          </Button>\r\n        </FormContainer>\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTaskPage;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport SignInPage from './pages/signin/SignInPage';\r\nimport SignUpPage from './pages/signup/SignUpPage';\r\nimport TasksPage from './pages/tasks/TasksPage';\r\nimport CreateTaskPage from './pages/create-task/CreateTaskPage';\r\n\r\n@inject('routerStore')\r\n@observer\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Route exact path=\"/\" component={SignInPage} />\r\n        <Route path=\"/signin/\" component={SignInPage} />\r\n        <Route path=\"/signup/\" component={SignUpPage} />\r\n        <Route exact path=\"/tasks\" component={TasksPage} />\r\n        <Route exact path=\"/tasks/create\" component={CreateTaskPage} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import BaseHttpService from './base-http.service';\r\nimport queryString from 'query-string';\r\n\r\nexport default class TasksService extends BaseHttpService {\r\n  fetchTasks({ status, search}) {\r\n    const queryObj = {};\r\n\r\n    if (status.length) {\r\n      queryObj.status = status;\r\n    }\r\n\r\n    if (search.length) {\r\n      queryObj.search = search;\r\n    }\r\n\r\n    const queryStr = queryString.stringify(queryObj);\r\n    return this.get('tasks' + (queryStr ? `?${queryStr}` : ''));\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    await this.delete(`tasks/${id}`);\r\n  }\r\n\r\n  updateTaskStatus(id, status) {\r\n    return this.patch(`tasks/${id}/status`, { status });\r\n  }\r\n\r\n  createTask(title, description) {\r\n    return this.post(`tasks`, { title, description });\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class TasksStore {\r\n  @observable tasks = [];\r\n  @observable filters = { status: '', search: '' };\r\n\r\n  constructor(tasksService) {\r\n    this.tasksService = tasksService;\r\n  }\r\n\r\n  updateFilters({ status, search }) {\r\n    this.filters.status = status;\r\n    this.filters.search = search;\r\n    this.fetchTasks();\r\n  }\r\n\r\n  @action\r\n  resetTasks() {\r\n    this.tasks = [];\r\n  }\r\n\r\n  @action\r\n  async fetchTasks() {\r\n    const result = await this.tasksService.fetchTasks(this.filters);\r\n\r\n    if (result) {\r\n      this.tasks = result.data;\r\n    }\r\n  }\r\n\r\n  @action\r\n  async createTask(title, description) {\r\n    const result = await this.tasksService.createTask(title, description);\r\n\r\n    if (result) {\r\n      this.tasks.push(result.data);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async deleteTask(id) {\r\n    const idx = this.tasks.findIndex(task => task.id === id);\r\n    await this.tasksService.deleteTask(id);\r\n    this.tasks.splice(idx, 1);\r\n  }\r\n\r\n  @action\r\n  async updateTaskStatus(id, status) {\r\n    const task = this.tasks.find(task => task.id === id);\r\n    await this.tasksService.updateTaskStatus(id, status);\r\n    task.status = status;\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class UserStore {\r\n  @observable username = null;\r\n\r\n  constructor(authService) {\r\n    this.authService = authService;\r\n  }\r\n\r\n  @action\r\n  async signin(username, password) {\r\n    this.username = await this.authService.signin(username, password);\r\n  }\r\n\r\n  @action\r\n  async signup(username, password) {\r\n    return this.authService.signup(username, password);\r\n  }\r\n\r\n  @action\r\n  signout() {\r\n    this.username = null;\r\n    this.authService.removeToken();\r\n  }\r\n}\r\n","import { post } from 'axios';\r\nimport BaseHttpService from './base-http.service';\r\n\r\nexport default class AuthService extends BaseHttpService {\r\n  async signin(username, password) {\r\n    const result = await post(`${this.BASE_URL}/auth/signin`, { username, password });\r\n    const accessToken = result.data.accessToken;\r\n    this.saveToken(accessToken);\r\n    return result.data.username;\r\n  }\r\n\r\n  async signup(username, password) {\r\n    await post(`${this.BASE_URL}/auth/signup`, { username, password });\r\n  }\r\n\r\n  async signout() {\r\n    this.removeToken();\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TasksService from './services/tasks.service';\r\nimport TasksStore from './stores/tasks.store';\r\nimport UserStore from './stores/user.store';\r\nimport AuthService from './services/auth.service';\r\n\r\n\r\nconst services = {};\r\nconst stores = {};\r\n\r\nstores.routerStore = new RouterStore();\r\nconst browserHistory = createBrowserHistory();\r\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\r\n\r\nservices.tasksService = new TasksService(stores.routerStore);\r\nservices.authService = new AuthService();\r\n\r\nstores.tasksStore = new TasksStore(services.tasksService);\r\nstores.userStore = new UserStore(services.authService);\r\n\r\nconst Root = (\r\n  <Provider {...stores}>\r\n    <HashRouter history={history}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(Root, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from 'axios';\r\n\r\nexport default class BaseHttpService {\r\n  BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3000';\r\n  _accessToken = null;\r\n\r\n  constructor(routerStore) {\r\n    this.routerStore = routerStore;\r\n  }\r\n\r\n  async get(endpoint, options = {}) {\r\n    console.log({process});\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.get(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch(error => this._handleHttpError(error));\r\n  }\r\n\r\n  async post(endpoint, data = {}, options = {}) {\r\n    console.log({process});\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.post(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch(error => this._handleHttpError(error));  \r\n  }\r\n\r\n  async delete(endpoint, options = {}) {\r\n    console.log({process});\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.delete(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch(error => this._handleHttpError(error));     \r\n  }\r\n\r\n  async patch(endpoint, data = {}, options = {}) {\r\n    console.log({process});\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.patch(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch(error => this._handleHttpError(error));   \r\n  }\r\n\r\n  _handleHttpError(error) {\r\n    const { statusCode } = error.response.data;\r\n\r\n    if (statusCode !== 401) {\r\n      throw error;\r\n    } else {\r\n      return this._handle401();\r\n    }\r\n  }\r\n\r\n  _handle401() {\r\n    window.location.hash = '/signin';\r\n  }\r\n\r\n  _getCommonOptions() {\r\n    const token = this.loadToken();\r\n\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  get accessToken() {\r\n    return this._accessToken ? this._accessToken : this.loadToken();\r\n  }\r\n\r\n  saveToken(accessToken) {\r\n    this._accessToken = accessToken;\r\n    return localStorage.setItem('accessToken', accessToken);\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('accessToken');\r\n    this._accessToken = token;\r\n    return token;\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem('accessToken');\r\n  }\r\n}\r\n"],"sourceRoot":""}