{"version":3,"sources":["components/ErrorMessage.js","pages/signin/SignInPage.js","pages/signup/SignUpPage.js","components/Task.js","components/TasksFilters.js","pages/tasks/TasksPage.js","pages/create-task/CreateTaskPage.js","App.js","serviceWorker.js","services/base-http.service.js","services/tasks.service.js","stores/tasks.store.js","stores/user.store.js","services/auth.service.js","index.js"],"names":["ErrorContainer","styled","div","_templateObject","ErrorHeading","h1","_templateObject2","ErrorList","ul","_templateObject3","ErrorMessage","renderMessageArray","errors","constraints","map","constraint","idx","react_default","a","createElement","key","message","this","props","Array","isArray","Component","Heading","SignInPage_templateObject","FormContainer","SignInPage_templateObject2","FormField","TextField","SignInPage_templateObject3","SignInPage","inject","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submit","asyncToGenerator","regenerator_default","mark","_callee","_this$state","username","password","errorMessage","wrap","_context","prev","next","setState","state","userStore","signin","window","location","hash","t0","response","data","stop","goToSignUp","errorMesssage","_this2","className","ErrorMessage_ErrorMessage","id","label","margin","variant","onChange","e","target","value","type","Button","style","marginBottom","fullWidth","color","onClick","SignUpPage_templateObject","SignUpPage_templateObject2","SignUpPage_templateObject3","SignUpPage","signup","SignUpPage_FormContainer","SignUpPage_Heading","SignUpPage_FormField","CardContainer","Task_templateObject","CardTitle","Task_templateObject2","Task","deleteTask","tasksStore","handleStatusChange","updateTaskStatus","_this$props","title","description","Card","CardContent","CardActions","padding","disableSpacing","Grid","justify","container","item","FormControl","width","Select","status","displayEmpty","MenuItem","IconButton","Delete_default","FiltersContainer","TasksFilters_templateObject","ControlContainer","TasksFilters_templateObject2","TasksFilters","filters$","Subject","syncFilters","search","handleStatusFilterChange","handleSearchTermChange","filters","pipe","debounceTime","subscribe","updateFilters","placeholder","InputProps","startAdornment","InputAdornment","position","Search_default","TasksWrapper","TasksPage_templateObject","TasksHeader","TasksPage_templateObject2","Title","TasksPage_templateObject3","CreateButtonContainer","_templateObject4","TasksContainer","_templateObject5","EmptyTasksPlaceholder","p","_templateObject6","SignOutIconContainer","_templateObject7","TasksPage","observer","handleSignOut","signout","resetTasks","renderTasks","tasks","length","task","components_Task","fetchTasks","Fab","Add_default","ExitToApp_default","components_TasksFilters","FormWrapper","CreateTaskPage_templateObject","CreateTaskPage_templateObject2","CreateTaskPage","handleSubmitTask","createTask","CreateTaskPage_FormContainer","multiline","rows","marginTop","App","react","react_router","exact","path","component","Boolean","hostname","match","BaseHttpService","routerStore","BASE_URL","process","REACT_APP_BASE_URL","_accessToken","endpoint","options","assign","_getCommonOptions","axios","get","concat","catch","error","_handleHttpError","post","delete","_this3","patch","_this4","statusCode","_handle401","token","loadToken","headers","Authorization","accessToken","localStorage","setItem","getItem","removeItem","TasksService","_ref","queryObj","queryStr","queryString","stringify","TasksStore","tasksService","initializerDefineProperty","_descriptor","_descriptor2","result","push","findIndex","splice","find","observable","action","UserStore","authService","user_store_descriptor","removeToken","AuthService","saveToken","services","stores","RouterStore","browserHistory","createBrowserHistory","history","syncHistoryWithStore","Root","index_module","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d03f173.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorContainer = styled.div`\r\n  width: 100%;\r\n  padding: 8px 16px;\r\n  background-color: #f7c5c0;\r\n  color: #a51809;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ErrorHeading = styled.h1`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ErrorList = styled.ul`\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport default class ErrorMessage extends Component {\r\n  renderMessageArray = errors => {\r\n    const constraints = errors.map((constraint, idx) => <li key={idx}>{constraint}</li>);\r\n \r\n    return <ErrorList>{constraints}</ErrorList>;\r\n  };\r\n \r\n  render() {\r\n    const { message } = this.props;\r\n \r\n    return (\r\n      <ErrorContainer>\r\n        <ErrorHeading>Oops!</ErrorHeading>\r\n        {Array.isArray(message) ? this.renderMessageArray(message) : <p>{message}</p>}\r\n      </ErrorContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport './SignInPage.scss';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignInPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMesssage: null,\r\n    };\r\n  }\r\n\r\n  submit = async () => {\r\n    this.setState({ errorMessage: null });\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      await this.props.userStore.signin(username, password);\r\n      window.location.hash = '/tasks';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  goToSignUp = () => {\r\n    window.location.hash = '/signup';\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Hello!</Heading>\r\n          <p>Fill in your username and password to sign in.</p>\r\n          \r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n            <Button\r\n              style={{ marginBottom: '10px' }}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n\r\n            <Button fullWidth onClick={this.goToSignUp}>\r\n              Don't have an account? Sign up now!\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInPage;\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nimport './SignUpPage.scss';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormField = styled(TextField)`\r\n  width: 100%;\r\n`;\r\n\r\n@inject('userStore', 'routerStore')\r\nclass SignUpPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  submit = async () => {\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      await this.props.userStore.signup(username, password);\r\n      window.location.hash = '/signin';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen-wrapper\">\r\n        <FormContainer>\r\n          <Heading>Join us!</Heading>\r\n          <p>Start managing tasks easily.</p>\r\n\r\n          {errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormField\r\n              id=\"outlined-name\"\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <p>\r\n            Passwords must contain at least 1 upper case letter, 1 lower case letter and one number OR special charracter.\r\n          </p>\r\n          <hr/>\r\n          <div>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.submit}\r\n            >\r\n              SIGN UP\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\n\r\nconst CardContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CardTitle = styled.h1`\r\n  margin: 8px 0;\r\n  font-size: 22px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass Task extends Component {\r\n  deleteTask = () => {\r\n    this.props.tasksStore.deleteTask(this.props.id);\r\n  };\r\n\r\n  handleStatusChange = e => {\r\n    this.props.tasksStore.updateTaskStatus(this.props.id, e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { title, description } = this.props;\r\n\r\n    return (\r\n      <CardContainer>\r\n        <Card>\r\n          <CardContent>\r\n            <CardTitle>{title}</CardTitle>\r\n            {description}\r\n          </CardContent>\r\n          <CardActions style={{ padding: '14px' }} disableSpacing>\r\n            <Grid\r\n              justify=\"space-between\" // Add it here :)\r\n              container \r\n            >\r\n              <Grid item>\r\n                <FormControl style={{ width: '140px' }}>\r\n                  <Select\r\n                    value={this.props.status}\r\n                    onChange={this.handleStatusChange}\r\n                    displayEmpty\r\n                  >\r\n                    <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                    <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                    <MenuItem value={'DONE'}>Done</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <IconButton onClick={this.deleteTask}>\r\n                  <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n        </Card>\r\n      </CardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport { Grid, FormControl, Select, MenuItem, TextField, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nconst FiltersContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ControlContainer = styled.div`\r\n  background-color: #c0cde0;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`;\r\n\r\n@inject('tasksStore')\r\nclass TasksFilters extends Component {\r\n  filters$ = new Subject();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: props.tasksStore.filters.status,\r\n      search: props.tasksStore.filters.search,\r\n    };\r\n\r\n    this.filters$\r\n      .pipe(\r\n        debounceTime(500),\r\n      )\r\n      .subscribe(filters => {\r\n        props.tasksStore.updateFilters(filters);\r\n      });\r\n  }\r\n\r\n  syncFilters = () => {\r\n    const { status, search } = this.state;\r\n    this.filters$.next({ status, search });\r\n  }\r\n\r\n  handleStatusFilterChange = e => {\r\n    const status = e.target.value;\r\n    this.setState({ status }, this.syncFilters);\r\n  };\r\n\r\n  handleSearchTermChange = e => {\r\n    const search = e.target.value;\r\n    this.setState({ search }, this.syncFilters);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FiltersContainer>\r\n        <Grid\r\n          justify=\"space-between\" // Add it here :)\r\n          container\r\n        >\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <TextField\r\n                  placeholder=\"Search...\"\r\n                  value={this.state.search}\r\n                  onChange={this.handleSearchTermChange}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <ControlContainer>\r\n              <FormControl style={{ width: '220px' }}>\r\n                <Select\r\n                  value={this.state.status}\r\n                  onChange={this.handleStatusFilterChange}\r\n                  displayEmpty\r\n                >\r\n                  <MenuItem value=\"\">No status filter</MenuItem>\r\n                  <MenuItem value={'OPEN'}>Open</MenuItem>\r\n                  <MenuItem value={'IN_PROGRESS'}>In Progress</MenuItem>\r\n                  <MenuItem value={'DONE'}>Done</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </ControlContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </FiltersContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksFilters;\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Fab, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SignOutIcon from '@material-ui/icons/ExitToApp'\r\nimport styled from 'styled-components';\r\nimport Task from '../../components/Task';\r\nimport TasksFilters from '../../components/TasksFilters';\r\n\r\nconst TasksWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 860px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TasksHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 3px solid #757c87;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 100%;\r\n  color: #edf4ff;\r\n`;\r\n\r\nconst CreateButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst TasksContainer = styled.div`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst EmptyTasksPlaceholder = styled.p`\r\n  color: #edf4ff;\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst SignOutIconContainer = styled.div`\r\n  margin-left: 10px;\r\n  \r\n  .signOutIcon {\r\n    fill: #edf4ff;\r\n  }\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore', 'userStore')\r\n@observer\r\nclass TasksPage extends Component {\r\n  componentDidMount() {\r\n    this.props.tasksStore.fetchTasks();\r\n  }\r\n  \r\n  handleSignOut = () => {\r\n    const { userStore, tasksStore } = this.props;\r\n    userStore.signout();\r\n    tasksStore.resetTasks();\r\n    window.location.hash = '/signin';\r\n  };\r\n\r\n  renderTasks = () => {\r\n    const { tasksStore } = this.props;\r\n\r\n    if (!tasksStore.tasks.length) {\r\n      return <EmptyTasksPlaceholder>No tasks available. Create one?</EmptyTasksPlaceholder>\r\n    }\r\n\r\n    return tasksStore.tasks.map(task => (\r\n      <Task\r\n        key={task.id}\r\n        id={task.id}\r\n        title={task.title}\r\n        description={task.description}\r\n        status={task.status}\r\n      />\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TasksWrapper>\r\n        <TasksHeader>\r\n          <Title>Get things done.</Title>\r\n\r\n          <CreateButtonContainer>\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={() => { window.location.hash = '/tasks/create'; }}\r\n            >\r\n              <AddIcon />\r\n              Create Task\r\n            </Fab>\r\n\r\n            <SignOutIconContainer>\r\n              <IconButton onClick={this.handleSignOut}>\r\n                <SignOutIcon className=\"signOutIcon\" />\r\n              </IconButton>\r\n            </SignOutIconContainer>\r\n          </CreateButtonContainer>\r\n        </TasksHeader>\r\n\r\n        <TasksFilters />\r\n\r\n        <TasksContainer>\r\n          {this.renderTasks()}\r\n        </TasksContainer>\r\n      </TasksWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksPage;\r\n","import React, { Component } from 'react';\r\nimport { TextField, FormControl, Button } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { inject } from 'mobx-react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst FormWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 480px;\r\n  width: 100%;\r\n  background-color: #edf4ff;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n`;\r\n\r\n@inject('tasksStore', 'routerStore')\r\nclass CreateTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  handleSubmitTask = async () => {\r\n    const { tasksStore } = this.props;\r\n    const { title, description } = this.state;\r\n\r\n    try {\r\n      await tasksStore.createTask(title, description);\r\n      window.location.hash = '/tasks';\r\n    } catch (error) {\r\n      const errorMessage = error.response.data.message;\r\n      this.setState({ errorMessage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormWrapper>\r\n        <FormContainer>\r\n          <h1>Create a new task</h1>\r\n          <p>Provide information about the task you wish to complete.</p>\r\n\r\n          { this.state.errorMessage && <ErrorMessage message={this.state.errorMessage} />}\r\n\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Title\"\r\n              placeholder=\"Title\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ title: e.target.value })}\r\n            />\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              label=\"Description\"\r\n              placeholder=\"Description\"\r\n              multiline\r\n              rows=\"8\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              onChange={e => this.setState({ description: e.target.value })}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{ marginTop: '10px' }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.handleSubmitTask}\r\n          >\r\n            CREATE TASK\r\n          </Button>\r\n        </FormContainer>\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTaskPage;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport SignInPage from './pages/signin/SignInPage';\r\nimport SignUpPage from './pages/signup/SignUpPage';\r\nimport TasksPage from './pages/tasks/TasksPage';\r\nimport CreateTaskPage from './pages/create-task/CreateTaskPage';\r\n\r\n@inject('routerStore')\r\n@observer\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Route exact path=\"/\" component={SignInPage} />\r\n        <Route path=\"/signin/\" component={SignInPage} />\r\n        <Route path=\"/signup/\" component={SignUpPage} />\r\n        <Route exact path=\"/tasks\" component={TasksPage} />\r\n        <Route exact path=\"/tasks/create\" component={CreateTaskPage} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default class BaseHttpService {\r\n  BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3000';\r\n  _accessToken = null;\r\n\r\n  constructor(routerStore) {\r\n    this.routerStore = routerStore;\r\n  }\r\n\r\n  async get(endpoint, options = {}) {\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.get(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch(error => this._handleHttpError(error));\r\n  }\r\n\r\n  async post(endpoint, data = {}, options = {}) {\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.post(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch(error => this._handleHttpError(error));  \r\n  }\r\n\r\n  async delete(endpoint, options = {}) {\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.delete(`${this.BASE_URL}/${endpoint}`, options)\r\n      .catch(error => this._handleHttpError(error));     \r\n  }\r\n\r\n  async patch(endpoint, data = {}, options = {}) {\r\n    Object.assign(options, this._getCommonOptions());\r\n    return axios.patch(`${this.BASE_URL}/${endpoint}`, data, options)\r\n      .catch(error => this._handleHttpError(error));   \r\n  }\r\n\r\n  _handleHttpError(error) {\r\n    const { statusCode } = error.response.data;\r\n\r\n    if (statusCode !== 401) {\r\n      throw error;\r\n    } else {\r\n      return this._handle401();\r\n    }\r\n  }\r\n\r\n  _handle401() {\r\n    window.location.hash = '/signin';\r\n  }\r\n\r\n  _getCommonOptions() {\r\n    const token = this.loadToken();\r\n\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  get accessToken() {\r\n    return this._accessToken ? this._accessToken : this.loadToken();\r\n  }\r\n\r\n  saveToken(accessToken) {\r\n    this._accessToken = accessToken;\r\n    return localStorage.setItem('accessToken', accessToken);\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('accessToken');\r\n    this._accessToken = token;\r\n    return token;\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem('accessToken');\r\n  }\r\n}\r\n","import BaseHttpService from './base-http.service';\r\nimport queryString from 'query-string';\r\n\r\nexport default class TasksService extends BaseHttpService {\r\n  fetchTasks({ status, search}) {\r\n    const queryObj = {};\r\n\r\n    if (status.length) {\r\n      queryObj.status = status;\r\n    }\r\n\r\n    if (search.length) {\r\n      queryObj.search = search;\r\n    }\r\n\r\n    const queryStr = queryString.stringify(queryObj);\r\n    return this.get('tasks' + (queryStr ? `?${queryStr}` : ''));\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    await this.delete(`tasks/${id}`);\r\n  }\r\n\r\n  updateTaskStatus(id, status) {\r\n    return this.patch(`tasks/${id}/status`, { status });\r\n  }\r\n\r\n  createTask(title, description) {\r\n    return this.post(`tasks`, { title, description });\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class TasksStore {\r\n  @observable tasks = [];\r\n  @observable filters = { status: '', search: '' };\r\n\r\n  constructor(tasksService) {\r\n    this.tasksService = tasksService;\r\n  }\r\n\r\n  updateFilters({ status, search }) {\r\n    this.filters.status = status;\r\n    this.filters.search = search;\r\n    this.fetchTasks();\r\n  }\r\n\r\n  @action\r\n  resetTasks() {\r\n    this.tasks = [];\r\n  }\r\n\r\n  @action\r\n  async fetchTasks() {\r\n    const result = await this.tasksService.fetchTasks(this.filters);\r\n\r\n    if (result) {\r\n      this.tasks = result.data;\r\n    }\r\n  }\r\n\r\n  @action\r\n  async createTask(title, description) {\r\n    const result = await this.tasksService.createTask(title, description);\r\n\r\n    if (result) {\r\n      this.tasks.push(result.data);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async deleteTask(id) {\r\n    const idx = this.tasks.findIndex(task => task.id === id);\r\n    await this.tasksService.deleteTask(id);\r\n    this.tasks.splice(idx, 1);\r\n  }\r\n\r\n  @action\r\n  async updateTaskStatus(id, status) {\r\n    const task = this.tasks.find(task => task.id === id);\r\n    await this.tasksService.updateTaskStatus(id, status);\r\n    task.status = status;\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class UserStore {\r\n  @observable username = null;\r\n\r\n  constructor(authService) {\r\n    this.authService = authService;\r\n  }\r\n\r\n  @action\r\n  async signin(username, password) {\r\n    this.username = await this.authService.signin(username, password);\r\n  }\r\n\r\n  @action\r\n  async signup(username, password) {\r\n    return this.authService.signup(username, password);\r\n  }\r\n\r\n  @action\r\n  signout() {\r\n    this.username = null;\r\n    this.authService.removeToken();\r\n  }\r\n}\r\n","import { post } from 'axios';\r\nimport BaseHttpService from './base-http.service';\r\n\r\nexport default class AuthService extends BaseHttpService {\r\n  async signin(username, password) {\r\n    const result = await post(`${this.BASE_URL}/auth/signin`, { username, password });\r\n    const accessToken = result.data.accessToken;\r\n    this.saveToken(accessToken);\r\n    return result.data.username;\r\n  }\r\n\r\n  async signup(username, password) {\r\n    await post(`${this.BASE_URL}/auth/signup`, { username, password });\r\n  }\r\n\r\n  async signout() {\r\n    this.removeToken();\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { createBrowserHistory } from 'history';\r\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TasksService from './services/tasks.service';\r\nimport TasksStore from './stores/tasks.store';\r\nimport UserStore from './stores/user.store';\r\nimport AuthService from './services/auth.service';\r\n\r\n\r\nconst services = {};\r\nconst stores = {};\r\n\r\nstores.routerStore = new RouterStore();\r\nconst browserHistory = createBrowserHistory();\r\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\r\n\r\nservices.tasksService = new TasksService(stores.routerStore);\r\nservices.authService = new AuthService();\r\n\r\nstores.tasksStore = new TasksStore(services.tasksService);\r\nstores.userStore = new UserStore(services.authService);\r\n\r\nconst Root = (\r\n  <Provider {...stores}>\r\n    <HashRouter history={history}>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(Root, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}